{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"lenet_tensorflow.ipynb","private_outputs":true,"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOVMMmLFSqi/P576kvI1oG4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"OZVMO_XP6XYZ"},"source":["import tensorflow as tf\n","import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RdYpXLZ96emK"},"source":["# 데이터를 준비\n","(train_x, train_y), _ = tf.keras.datasets.mnist.load_data()\n","train_x = train_x.reshape(60000, 28, 28, 1)\n","train_y = pd.get_dummies(train_y)\n","print(train_x.shape, train_y.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VBt3Hv1b87P_"},"source":["print(len(train_x))\n","print(train_y[1])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RMUzz_6Q6tGA"},"source":["# 모델을 완성\n","X = tf.keras.layers.Input(shape=[28, 28, 1])\n","\n","H = tf.keras.layers.Conv2D(6, kernel_size=5, padding='same', activation='swish')(X)\n","H = tf.keras.layers.MaxPool2D()(H)\n","\n","H = tf.keras.layers.Conv2D(16, kernel_size=5, activation='swish')(H)\n","H = tf.keras.layers.MaxPool2D()(H)\n","\n","H = tf.keras.layers.Flatten()(H)\n","H = tf.keras.layers.Dense(120, activation='swish')(H)\n","H = tf.keras.layers.Dense(84, activation='swish')(H)\n","Y = tf.keras.layers.Dense(10, activation='softmax')(H)\n","\n","model = tf.keras.models.Model(X, Y)\n","model.compile(loss='categorical_crossentropy', metrics='accuracy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"L44reEVA65TH"},"source":["model.fit(train_x, train_y, epochs=10)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z1yiTFp_7Bfw"},"source":["model.summary()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hieZpWpA7XbR"},"source":["model.save('lenet_model_tf.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jGUdKl_Q7s-p"},"source":["# 가중치와 옵티마이저를 포함하여 정확히 동일한 모델을 다시 생성\n","new_model = tf.keras.models.load_model('lenet_model_tf.h5')\n","\n","# 모델 구조를 출력\n","new_model.summary()\n","\n","import tensorflow as tf\n","import numpy as np\n","\n","\n","##########모델 예측\n","\n","x_test = np.array([\n","    # 데이터 정보들..\n","])\n","\n","y_predict = model.predict(x_test)\n","\n","label = labels[y_predict[0].argmax()]\n","confidence = y_predict[0][y_predict[0].argmax()]\n","print('{} {:.2f}%'.format(label, confidence * 100)) #"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nFDB2Vuo7zuG"},"source":["print(train_x[0].shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2ANORpms-AZb"},"source":["new_model(train_x[0])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tsWSWnKT_D9r"},"source":[""]},{"cell_type":"code","metadata":{"id":"nsQ_c4wC-nHD"},"source":["# 다시시작"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"grMufV_s_skh"},"source":["!pip install -q tensorflow-gpu==2.0.0-rc1\n","import tensorflow as tf\n","\n","from tensorflow.keras.layers import Dense, Flatten, Conv2D\n","from tensorflow.keras import Model"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wlTrWOrXB2OW"},"source":["from tensorflow.keras.layers import MaxPool2D"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gcR7bjJr_tgM"},"source":["mnist = tf.keras.datasets.mnist\n","\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()\n","x_train, x_test = x_train / 255.0, x_test / 255.0 # normalization\n","\n","# 채널 차원을 추가 -> TODO what happend?\n","x_train = x_train[..., tf.newaxis]\n","x_test = x_test[..., tf.newaxis]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ff0hV0tpAJBS"},"source":["print(x_train.shape)\n","print(x_test.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oeWKLaRvALIC"},"source":["train_ds = tf.data.Dataset.from_tensor_slices(\n","    (x_train, y_train)).shuffle(10000).batch(32)\n","test_ds = tf.data.Dataset.from_tensor_slices((x_test, y_test)).batch(32)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"eX2eLvciAaCS"},"source":["class MyModel(Model):\n","  def __init__(self):\n","    super(MyModel, self).__init__()\n","    self.conv1 = Conv2D(6, kernel_size=5, padding='same', activation='relu')\n","    self.maxpool_1 = MaxPool2D()\n","    \n","    self.conv2 = Conv2D(16, kernel_size = 5, activation = 'relu')\n","    self.maxpool_2 = MaxPool2D()\n","\n","    self.flatten = Flatten()\n","    self.dense_1 = Dense(120, activation = 'relu')\n","    self.dense_2 = Dense(84, activation = 'relu')\n","    self.dense_3 = Dense(10, activation = 'softmax')\n","\n","  def call(self, x):\n","    x = self.conv1(x)\n","    x = self.maxpool_1(x)\n","    x = self.conv2(x)\n","    x = self.maxpool_2(x)\n","    x = self.flatten(x)\n","    x = self.dense_1(x)\n","    x = self.dense_2(x)\n","    return self.dense_3(x)\n","\n","model = MyModel()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VeY23OCWBmGJ"},"source":["# 옵티마이저랑 손실함수\n","loss_object = tf.keras.losses.SparseCategoricalCrossentropy()\n","\n","optimizer = tf.keras.optimizers.Adam()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"igv_lpwHCBid"},"source":["train_loss = tf.keras.metrics.Mean(name='train_loss')\n","train_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='train_accuracy')\n","\n","test_loss = tf.keras.metrics.Mean(name='test_loss')\n","test_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='test_accuracy')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qn13DI9WCHIe"},"source":["@tf.function\n","\n","def train_step(images, labels):\n","  with tf.GradientTape() as tape:\n","    predictions = model(images)\n","    loss = loss_object(labels, predictions)\n","  gradients = tape.gradient(loss, model.trainable_variables)\n","  optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n","\n","  train_loss(loss)\n","  train_accuracy(labels, predictions)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Mp44FdSyCKh8"},"source":["@tf.function\n","def test_step(images, labels):\n","  predictions = model(images)\n","  t_loss = loss_object(labels, predictions)\n","\n","  test_loss(t_loss)\n","  test_accuracy(labels, predictions)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-oHIxE8TCNbN"},"source":["EPOCHS = 5\n","\n","for epoch in range(EPOCHS):\n","  for images, labels in train_ds:\n","    train_step(images, labels)\n","\n","  for test_images, test_labels in test_ds:\n","    test_step(test_images, test_labels)\n","\n","  template = 'epoch: {}, loss: {}, accuracy: {}, test_loss: {}, test_accuracy: {}'\n","  print (template.format(epoch+1,\n","                         train_loss.result(),\n","                         train_accuracy.result()*100,\n","                         test_loss.result(),\n","                         test_accuracy.result()*100))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZAYEWl1VCapK"},"source":["model.save_weights('lenet_model_tf_v.2.h5')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"P2EJ6fwGCoim"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IKql0nzjC2iO"},"source":[""],"execution_count":null,"outputs":[]}]}